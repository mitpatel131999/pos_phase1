version: '3.8'

# This compose file defines the second phase of the migration: the
# monolithic POS backend has been decomposed into domainâ€‘specific
# microservices.  Each service clones the original repository and
# registers only its own blueprint.  The API gateway routes
# incoming HTTP requests based on the URL path prefix to the
# appropriate service.  A MongoDB instance is provided for local
# development; you can point services at your production database
# instead.

services:
  auth_service:
    build:
      context: ./auth_service
    container_name: pos_auth_service
    environment:
      - MONGO_URI=mongodb://db:27017/posdb
    depends_on:
      - db
    restart: unless-stopped

  profile_service:
    build:
      context: ./profile_service
    container_name: pos_profile_service
    environment:
      - MONGO_URI=mongodb://db:27017/posdb
    depends_on:
      - db
    restart: unless-stopped

  catalog_service:
    build:
      context: ./catalog_service
    container_name: pos_catalog_service
    environment:
      - MONGO_URI=mongodb://db:27017/posdb
    depends_on:
      - db
    restart: unless-stopped

  transactions_service:
    build:
      context: ./transactions_service
    container_name: pos_transactions_service
    environment:
      - MONGO_URI=mongodb://db:27017/posdb
    depends_on:
      - db
    restart: unless-stopped

  orders_service:
    build:
      context: ./orders_service
    container_name: pos_orders_service
    environment:
      - MONGO_URI=mongodb://db:27017/posdb
    depends_on:
      - db
    restart: unless-stopped

  admin_panel:
    build:
      context: ./admin_panel
    container_name: pos_admin_panel
    ports:
      - "3000:3000"
    depends_on:
      - auth_service
      - profile_service
      - catalog_service
      - transactions_service
      - orders_service
    restart: unless-stopped

  gateway:
    build:
      context: ./gateway
    container_name: pos_api_gateway
    ports:
      - "80:80"
    depends_on:
      - auth_service
      - profile_service
      - catalog_service
      - transactions_service
      - orders_service
    restart: unless-stopped
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf:ro

  db:
    image: mongo:6
    container_name: pos_micro_mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=posdb
    volumes:
      - mongo_data:/data/db

volumes:
  mongo_data:
